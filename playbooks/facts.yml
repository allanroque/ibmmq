---
- name: Coleta de visibilidade simples do IBM MQ
  hosts: mq_servers
  gather_facts: yes
  tasks:

    - name: Versão do MQ
      command: dspmqver
      become: true
      become_user: mqm
      become_method: sudo   # ou "su", conforme seu ambiente
      register: mq_version

    - name: Queue Managers disponíveis
      command: dspmq
      become: true
      become_user: mqm
      become_method: sudo
      register: qmgrs_raw

    - name: Extrair nomes dos QMgrs
      set_fact:
        qmgrs: "{{ qmgrs_raw.stdout_lines
                   | map('regex_search', 'QMNAME\\(([^)]+)\\)', '\\1')
                   | select('string')
                   | list }}"

    - name: Listar canais
      shell: "echo 'DISPLAY CHSTATUS(*)' | runmqsc {{ item }}"
      become: true
      become_user: mqm
      become_method: sudo
      loop: "{{ qmgrs }}"
      register: mq_channels

    - name: Listar filas
      shell: "echo 'DISPLAY QLOCAL(*) CURDEPTH MAXDEPTH' | runmqsc {{ item }}"
      become: true
      become_user: mqm
      become_method: sudo
      loop: "{{ qmgrs }}"
      register: mq_queues

    - name: Listar listeners
      shell: "echo 'DISPLAY LISTENER(*)' | runmqsc {{ item }}"
      become: true
      become_user: mqm
      become_method: sudo
      loop: "{{ qmgrs }}"
      register: mq_listeners

    - name: Consolidar resultado
      debug:
        msg:
          host: "{{ inventory_hostname }}"
          collected_at: "{{ ansible_date_time.iso8601 }}"
          mq_version: "{{ mq_version.stdout }}"
          qmgrs: "{{ qmgrs }}"
          channels: "{{ mq_channels.results | map(attribute='stdout_lines') | list }}"
          queues: "{{ mq_queues.results | map(attribute='stdout_lines') | list }}"
          listeners: "{{ mq_listeners.results | map(attribute='stdout_lines') | list }}"
